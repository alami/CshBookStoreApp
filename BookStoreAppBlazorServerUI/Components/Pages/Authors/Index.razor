@page "/authors/"
@inject IAuthorService authorService
<h3>Index</h3>
@if (response.Success == false)
{
    <div class="alert alert-danger"><h4>@response.Message</h4></div>
}
@if (Authors == null)
{
    <div class="alert alert-info"><h4>Loading Data...</h4></div>
}
else
{
    <a href="/authors/create" class="btn btn-dark"><span class="bi bi-list-nested-nav-menu"></span>Create</a>
    <br />
    <table class="table table-responsive">
        <thead>
        <th>First Name</th>
        <th>Last Name</th>
        <th>Actions</th>
        </thead>
        <tbody>
            @foreach (var author in Authors)
            {
                <tr>
                    <td>@author.FirstName</td>
                    <td>@author.LastName</td>
                    <td>
                        <a href="/authors/details/@author.Id" class="btn btn-primary"><span class="bi bi-list-nested-nav-menu"></span>Details</a>
                        <a href="/authors/update/@author.Id" class="btn btn-warning"><span class="bi bi-list-nested-nav-menu"></span>Edit</a>
                        <a href="/authors/delete" class="btn btn-danger"><span class="bi bi-list-nested-nav-menu"></span>Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private List<AuthorReadOnlyDto> Authors;
    private Response<List<AuthorReadOnlyDto>> response = new Response<List<AuthorReadOnlyDto>>
    {
        Success = true
    };

protected override async Task OnInitializedAsync()
{
    // ( Authors = await httpClient.AuthorsAllAsync()).ToList();
    response = await authorService.GetAuthors();
    if (response.Success)
    {
        Authors = response.Data;
    }
}
}
